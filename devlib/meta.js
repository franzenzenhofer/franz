// Generated by CoffeeScript 1.3.1
(function() {
  var __slice = [].slice;

  Franz.many = function() {
    var action, actions, c, cb, p, paramA, params, _ref, _ref1, _ref2;
    c = arguments[0], p = 2 <= arguments.length ? __slice.call(arguments, 1) : [];
    _ref = fff(p), cb = _ref[0], actions = _ref[1], params = _ref[2];
    cbr(cb);
    action = (_ref1 = actions != null ? actions.shift() : void 0) != null ? _ref1 : null;
    paramA = (_ref2 = params != null ? params.shift() : void 0) != null ? _ref2 : [];
    while (!Array.isArray(paramA)) {
      paramA = [paramA];
    }
    if (actions.length > 0) {
      return action.apply(null, [c, (function(c) {
        return Franz.many(c, cb, actions, params);
      })].concat(__slice.call(paramA)));
    } else {
      return action(c, cb, paramA);
    }
  };

  Franz.applyIfRgba = function(c, franz_filter, franz_filter_arguments, if_filter, cb) {
    var orig_c, orig_ctx, orig_imgd, orig_pxs, _ref;
    orig_c = Franz.copy(c);
    _ref = Franz.getToolbox(orig_c), orig_c = _ref[0], orig_ctx = _ref[1], orig_imgd = _ref[2], orig_pxs = _ref[3];
    return Franz.many(c, [franz_filter], [franz_filter_arguments], function(c) {
      var ctx, filter, imgd, new_c, new_ctx, new_imgd, new_pxs, pxs, _ref1, _ref2;
      _ref1 = Franz.getToolbox(c), c = _ref1[0], ctx = _ref1[1], imgd = _ref1[2], pxs = _ref1[3];
      _ref2 = Franz.newToolbox(c), new_c = _ref2[0], new_ctx = _ref2[1], new_imgd = _ref2[2], new_pxs = _ref2[3];
      filter = function(r, g, b, a, i) {
        if (if_filter(r, g, b, a, i)) {
          return [pxs[i], pxs[i + 1], pxs[i + 2], pxs[i + 3]];
        } else {
          return [r, g, b, a, i];
        }
      };
      return Franz.rgba(orig_c, cb, filter);
    });
  };

  Franz.preserveGreen = function(c, cb) {
    return Franz.applyIfRgba(c, Franz.blackWhite, [], (function(r, g, b, a, i) {
      if (r > g || b > g) {
        return true;
      } else {
        return false;
      }
    }), cb);
  };

  Franz.preserveBlue = function(c, cb) {
    return Franz.applyIfRgba(c, Franz.blackWhite, [], (function(r, g, b, a, i) {
      if (r > b || g > b) {
        return true;
      } else {
        return false;
      }
    }), cb);
  };

  Franz.preserveRed = function(c, cb) {
    return Franz.applyIfRgba(c, Franz.blackWhite, [], (function(r, g, b, a, i) {
      if (g > r || b > r) {
        return true;
      } else {
        return false;
      }
    }), cb);
  };

  Franz.preserveYellow = function(c, cb) {
    return Franz.applyIfRgba(c, Franz.blackWhite, [], (function(r, g, b, a, i) {
      if (r > 127 && g > 127 && b < 50) {
        return FALSE;
      } else {
        return TRUE;
      }
    }), cb);
  };

}).call(this);
